name: Master/Stable

on:
  push:
    branches: [ master, stable, angular13 ]
    paths-ignore:
    - '*.md'
    - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: [a,b,c,d,e,f,g,h,i,j]
    steps:
    - uses: actions/checkout@v3
    - name: Create docker network ðŸ–§
      run: docker network create --driver bridge data
    - name: Start MariaDB
      run: |
        docker pull mariadb:10.8
        docker run --name mariadbtest --network data -e MYSQL_ROOT_PASSWORD=secretpassword -p 3306 -d mariadb:10.8
    - name: Start rabbitmq
      run: |
        docker pull rabbitmq:latest
        docker run -d --hostname my-rabbit --name some-rabbit --network data -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=password rabbitmq:latest
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.12.1'
    - name: Install dependencies
      run: dotnet restore eFormAPI/eFormAPI.sln
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | cut -d "v" -f 2)
    - name: Build
      run: dotnet build eFormAPI/eFormAPI.sln
    - name: Unit Tests
      run: dotnet test --no-restore -c Release -v n eFormAPI/eFormAPI.Web.Tests/eFormAPI.Web.Tests.csproj
    - name: Integration Tests
      run: dotnet test --no-restore -c Release -v n eFormAPI/eFormAPI.Web.Integration.Tests/eFormAPI.Web.Integration.Tests.csproj
    - name: NPM Install
      run: cd eform-client && npm install
    - name: Create errorShots directory
      run: mkdir /home/runner/work/eform-angular-frontend/eform-angular-frontend/eform-client/errorShots
    - name: NPM start
      run: cd eform-client && npm start > npm_log 2>&1 &
    - name: Sleep 75 seconds
      run: sleep 75
    - name: Dotnet run
      run: dotnet run --project eFormAPI/eFormAPI.Web/eFormAPI.Web.csproj > dotnet_log 2>&1 &
    - name: Sleep 75 seconds
      run: sleep 75
    - name: Configuration testing
      run: cd eform-client && npm run testheadless
    - name: testheadless2${{matrix.test}}
      run: cd eform-client && npm run testheadless2${{matrix.test}}
    - name: The job has failed
      if: ${{ failure() }}
      run: |
        cat dotnet_log
        cat eform-client/npm_log
    - name: Notify slack fail
      if: ${{ failure() }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel_id: CC04FGH5K
        status: ${{matrix.test}} FAILED
        color: danger
    - name: Archive screenshot artifacts
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: error Screenshots
        path: |
          /home/runner/work/eform-angular-frontend/eform-angular-frontend/eform-client/errorShots/chrome*.png
        retention-days: 2
