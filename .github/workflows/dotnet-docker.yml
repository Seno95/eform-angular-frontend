name: Docker build

on:
  push:
    tags:
      - 'v*.*.*'
    paths-ignore:
    - '**.md'
    - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: [a,b,c,d,e,f,g,h]
    steps:
    - uses: actions/checkout@v2
    - name: Upgrade Chrome browser
      run: |
        sudo apt-get update
        sudo apt-get --only-upgrade install google-chrome-stable

        google-chrome --version
    - uses: getong/mariadb-action@v1.1
      with:
        host port: 3306
        container port: 3306
        character set server: 'utf8'
        collation server: 'utf8_general_ci'
        mariadb version: '10.4.10'
        mysql database: 'some_test'
        mysql root password: 'secretpassword'
        mysql user: 'developer'
        mysql password: 'passwordtoo'
    - name: Sleep 15 seconds
      run: sleep 15
    - uses: getong/rabbitmq-action@v1.2
      with:
        rabbitmq version: '3.8.2-management-alpine'
        host port: 5672
        rabbitmq user: 'admin'
        rabbitmq password: 'password'
        rabbitmq vhost: 'vhost_name'
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.16.1'
    - name: Install dependencies
      run: dotnet restore eFormAPI/eFormAPI.sln
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(git describe --abbrev=0 --tags | cut -d "v" -f 2)
    - name: Build
      run: dotnet build eFormAPI/eFormAPI.sln
    - name: Unit Tests
      run: dotnet test --no-restore -c Release -v n eFormAPI/eFormAPI.Web.Tests/eFormAPI.Web.Tests.csproj
    - name: Integration Tests
      run: dotnet test --no-restore -c Release -v n eFormAPI/eFormAPI.Web.Integration.Tests/eFormAPI.Web.Integration.Tests.csproj
    - name: NPM Install
      run: cd eform-client && npm install
    - name: NPM start
      run: cd eform-client && npm start &
    - name: Sleep 75 seconds
      run: sleep 75
    - name: Dotnet run
      run: dotnet run --project eFormAPI/eFormAPI.Web/eFormAPI.Web.csproj > dotnet_log 2>&1 &
    - name: Sleep 75 seconds
      run: sleep 75
    - name: Configuration testing
      run: cd eform-client && npm run testheadless
    - name: testheadless2${{matrix.test}}
      run: cd eform-client && npm run testheadless2${{matrix.test}}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(git describe --abbrev=0 --tags | cut -d "v" -f 2)
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        build-args:
          GITVERSION=${{ steps.get_version.outputs.VERSION }}
        push: true
        tags: microtingas/angular-frontend:latest,microtingas/angular-frontend:${{ steps.get_version.outputs.VERSION }}
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    - name: Notify slack fail
      if: ${{ failure() }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel_id: CC04FGH5K
        status: ${{matrix.test}} FAILED
        color: danger
    - name: Send a message to Microsoft Teams
      if: ${{ failure() }}
      uses: aliencube/microsoft-teams-actions@v0.8.0
      with:
        webhook_uri: ${{ secrets.WEBHOOK_URL}}
        title: ${{matrix.test}} FAILED
        summary: ${{matrix.test}} FAILED
        text: ${{matrix.test}} FAILED
